# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: CI/CD Frontend to Ubuntu

on:
  push:
    branches:
      - main  

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout code
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 3. Log in GHCR
      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: Nguyenthanhtoan2103           # GitHub username
          password: ${{ secrets.GHCR_PAT }}      # Personal Access Token

      # 4. Build Docker image (lowercase repo name)
      - name: Build Docker image
        run: |
          REPO_NAME=$(echo ${{ github.repository }} | cut -d'/' -f2 | tr '[:upper:]' '[:lower:]')
          echo "Docker image: ghcr.io/${{ github.repository_owner }}/$REPO_NAME:latest"
          docker build -t ghcr.io/${{ github.repository_owner }}/$REPO_NAME:latest .

      # 5. Push Docker image lên GHCR
      - name: Push Docker image
        run: |
          REPO_NAME=$(echo ${{ github.repository }} | cut -d'/' -f2 | tr '[:upper:]' '[:lower:]')
          docker push ghcr.io/${{ github.repository_owner }}/$REPO_NAME:latest

      # 6. Deploy lên server via SSH
      - name: Deploy to server
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}          # IP server
          username: ${{ secrets.VPS_USER }}      # user trên server
          key: ${{ secrets.PRIVATE_SSH_KEY }}    # private SSH key
          script: |
            REPO_NAME=$(echo ${{ github.repository }} | cut -d'/' -f2 | tr '[:upper:]' '[:lower:]')
            echo "Deploy Docker image: ghcr.io/${{ github.repository_owner }}/$REPO_NAME:latest"
            
            # Pull image mới nhất từ GHCR
            docker pull ghcr.io/${{ github.repository_owner }}/$REPO_NAME:latest

            # Stop container cũ nếu có
            docker stop frontend || true
            docker rm frontend || true

            # Run container mới
            docker run -d --name frontend -p 80:80 ghcr.io/${{ github.repository_owner }}/$REPO_NAME:latest


